name: Deploy website
on:
  push:
    branches:
      - master
jobs:
  # DKDK job artifacts
  # build creates compiled files, so use it at other job like updating server
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v4
      - name: Install dependencies
        run: npm ci
      - name: Lint code
        run: npm run lint
      - name: Test code
        run: npm run test
  build:
    needs: test
    runs-on: ubuntu-latest
    # DKDK set job output variable
    outputs:
      script-file: ${{ steps.publish.outputs.filename }}
    steps:
      - name: Get code
        uses: actions/checkout@v4
      - name: Install dependencies
        run: npm ci
      - name: Build website
        run: npm run build
      # DKDK job output such as built file name
      - name: Publish JS filename
        # DKDK job output id
        id: publish
        # DKDK assign output value to job output variable
        run: find dist/assets/*.js -type f -execdir echo 'filename={}' >> $GITHUB_OUTPUT ';'
      # DKDK build create dist directory and compiled files (artifacts), so add upload to a server
      - name: Upload artifacts
        # https://github.com/actions/upload-artifact
        uses: actions/upload-artifact@v4
        with:
          name: dist-files
          # DKDK no need to have package.json but just for demoing multiple paths
          # path: |
          #   dist
          #   package.json
          path: dist
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Get build artifacts
        uses: actions/download-artifact@v4
        with:
          # DKDK this name is the same with built artifacts above (at build:)
          name: dist-files
      - name: Output contents
        run: ls
      # DKDK use build's filename variable here
      - name: Output filename
        run: echo "${{ needs.build.outputs.script-file }}"
      - name: Deploy
        run: echo "Deploying..."
